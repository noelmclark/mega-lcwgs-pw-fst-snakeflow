
localrules: make_bamlists,fold_winsfs,summarise_average_fst_values

include: "rules/common.smk"
include: "rules/winsfs-route.smk"
include: "rules/summarize.smk"
include: "rules/one-d-sfs-edification.smk"
include: "rules/diversity.smk"


rule all:
  input:
    expand("results/{mode}/{chunk}/winsfs/{p1}--x--{p2}.ml", mode=config["modes"], chunk=chrom_list, p1=pwcomps.pop1.tolist(),
  p2=pwcomps.pop2.tolist()),
    #aves=expand("results/{mode}/summarized/all-pw-fsts.tsv", mode=config["modes"]),
    #thetaaves=expand("results/{mode}/summarized/all-thetas.tsv", mode = config["modes"]),
    #windows=ALLSLIDEWINDOWS,
    #thetawindows=ALLTHETAWIN


rule index_fasta:
  input:
    genome=config["genome"]
  output:
    fai=config["genome"] + ".fai"
  log:
    "results/logs/index_fasta/log.txt"
  conda:
    "envs/samtools.yaml"
  benchmark:
    "results/benchmarks/index_fasta/log.txt"
  shell:
    " samtools faidx {input.genome} 2> {log} "
    

rule make_bamlists:
  input:
    bl=get_bams_in_pop
  output:
    bl="results/{mode}/{chunk}/bamlists/{grp}.txt"
  log:
    "results/logs/make_bamlists/{mode}/{chunk}/{grp}.txt"
  benchmark:
    "results/benchmarks/make_bamlists/{mode}/{chunk}/{grp}.txt"
  shell:
    "echo {input.bl} | awk '{{for(i=1;i<=NF;i++) print $i}}' > {output.bl} 2> {log} "


rule calc_saf:
  input: 
    genome=config["genome"],
    fai=config["genome"] + ".fai",
    bl="results/{mode}/{chunk}/bamlists/{grp}.txt"
  params:
    bf=config["params"]["angsd_bam_filters"],
    cs=config["params"]["calc_saf"],
    chunk_opt=get_chunk
  output:
    saf="results/{mode}/{chunk}/saf/{grp}.saf.idx"
  threads: 1
  conda:
    "envs/angsd.yaml"
  log:
    "results/logs/calc_saf/{mode}/{chunk}/{grp}.txt"
  benchmark:
    "results/benchmarks/calc_saf/{mode}/{chunk}/{grp}.txt"
  shell:
    " PREFIX=$(echo {output.saf} | sed 's/\\.saf\\.idx$//g;');"
    " angsd -b {input.bl} -nThreads {threads} -anc {input.genome} {params.chunk_opt} "
    " -ref {input.genome} -out $PREFIX {params.cs} {params.bf} > {log} 2>&1 "
